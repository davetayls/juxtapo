/*
    3.0.screen.css
    This is the global screen stylesheet. 
    The imports below get combined and compressed in to this file on deployment.
*/
/*@import url("3.0_0.screen-structure.css");*/
/*
    3.0_0.screen-structure
    This style sheet contains core structural layout 
    
    This shouldn't contain reusable modules or components but would generally 
    set out the chrome of the page using ids
    
    This would often contain the primary and secondary navigation styles but if they
    are not specified here they should be within screen-navs
    
    This file should be ordered as elements appear on the page including indentation.
    
*/

/* Layout */
body {
	background: #000 url(../images/body-bg.png) no-repeat center top;
}

#nav-accessibility      { position: absolute; top: 0px; left: 0px; z-index: 1000; }
	#nav-accessibility h2   { position:absolute; top: auto; left: -10000px; width: 1px; height: 1px; }
	#nav-accessibility ul   { list-style: none; margin:0; position:absolute; }
		#nav-accessibility li	{ position: absolute; top: 0; left: 0; }
			#nav-accessibility a    { position:absolute; display: block; top: auto; left: -10000px; width: 1px; height: 1px; }
			#nav-accessibility a:active, 
			#nav-accessibility a:focus { z-index: 1000; top: 0; left: 0px; width: 350px; height: 20px; background-color: white; border: 1px dotted #ccc; padding: 5px; }

#wrapper {
	margin: 0 auto;
    padding: 0;
	position: relative;
	width: 980px;	
}
	#logo {
	    left:2px;
	    position:absolute;
	    top:8px;
	    z-index:10;
	}
		#logo a, #logo img { display: block; }

    #content { 
	    margin: 0;
	    padding: 110px 0 0;
    }

	#nav-primary {
		background: #000;
		border-bottom: solid 1px #fff;
		/*height: 97px;*/
	    left:0px;
		padding: 0 27px 0 227px;
	    position:absolute;
	    top:0px;
	    z-index:5;		
	}
		#nav-primary ul {
			padding-top: 3px;
		}
		#nav-primary li {
			display: block;
			float: left;
			list-style: none;
			padding: 0px;
		}
			#nav-primary li a {
				background-color: #333;
				border: solid 1px #333;
				border-radius: 1px;
				-moz-border-radius: 1px;
				display: block;
				font-size: 1.2em;
				letter-spacing: -0.03em;
				margin: 12px 3px 0;
				padding: 20px 10px;
				text-decoration: none;
			}
			#nav-primary li a:hover {
				background-color: #555;
			}
			#nav-primary li.nav-selected a {
				border-top: solid 1px #fff;
				border-right: solid 1px #fff;
				border-bottom: none;
				border-left: solid 1px #fff;
				color: #fff;
				margin-bottom: -1px;
				padding-bottom: 44px;
			}


	
#footer {
	background: #202020 url(../images/footer-bg.png) repeat-x left top;
	margin: 10px 0;
	min-height: 140px;
	padding: 17px;
}
	#footer h2 {
		color: #fff;
		font-size: 1em;
	}


/*@import url("3.0_1.screen-reusable.css");*/
/*
	3.0_1.screen-reusable
	This file has two sections. 
	
	The first is for simple 1 or 2 line styles:	
	- This should contain basic reusable styles.
	- This should not contain any component or module styles
	- The styles should be in a rough alphabetical order
	
	The Second is for icon definitions
	- icon names should be in a rough alphabetical order
*/


.accessibility-item,
.accessibility-link { position:absolute; display: block; top: auto; left: -10000px; width: 1px; height: 1px; }
.align-left         { text-align: left !important; }
.align-right        { text-align: right !important; }
/*  cc - clear container */
.cc { zoom: 1; } .cc:after {content: ".";display: block;height: 0;clear: both;visibility: hidden;}
.float-right        { float: right !important; }
.font-weight-normal { font-weight: normal !important; }
.hide				{ display: none; }
.image-float-left	{ float: left; margin: 0 10px 10px 0px; }
.image-float-right	{ float: right; margin: 0 0 10px 10px; }
.tight-top          { padding-top: 0 !important; }

.featureButton {
	background:#00ADEF !important;
	border: solid 1px #6bd7ff !important;
	box-shadow:0 0 10px #00ADEF;
	-webkit-box-shadow:0 0 10px #00ADEF;
	-moz-box-shadow:0 0 10px #00ADEF;
	color: #000 !important;
	font-weight: bold;
	text-decoration: none;
}
.featureButton:hover {
	background-color: #6bd7ff !important;
	border-color: #eef !important;
}
.featureBlock {
	display: block;
	font-size: 1.2em;
	margin: 15px 0 0;
	padding: 20px 10px;
	text-align: center;
}

/*
    Section for icons
--------------------------------------------------------*/
.ico {
    vertical-align: top;
    margin: 0;
    outline: none;
    padding-left: 15px;
    position: relative;
    text-align: left;
    text-decoration: none !important;
    zoom: 1; /* this tells ie to mark the element with the hasLayout property allowing us to use the % below */
}
    .ico span {
	    background-image: url(../images/sprites.png); /* ie6 override */
	    background-repeat: no-repeat;
	    display: block;
	    height: 15px;
	    left: 0;
	    margin: -7px 0 0;
	    padding: 0;
	    position: absolute;
	    text-align: left;
	    text-indent: -9999px;
	    top: 50% !important; /* this is overriden in ie7/6 to 49.9% */
	    width: 15px;
	    zoom: 1;
    }
	* html .ico span { background-image: url(../images/sprites.gif); top: 49.9%; } /* ie6 only */
	*:first-child+html { top: 49.9%; } /* ie7 only */
	
a.ico, a.ico span { cursor: pointer; }

/* example icon */
.ico-x {
    padding-left: 8px !important; /* approx ico width */
}
    .ico-x span {
        background-position: -25px -50px; /* position within sprite */
        height: 9px; /* exact icon height */
        margin-top: -4px; /* tweak this to position the icon vertically with text */
        width: 10px; /* exact icon width */
    }

/*@import url("3.0_2.screen-components.css");*/
/*
    3.0_2.screen-components
    
    - basic reusable items which are simple
    - components cannot contain child components or modules
    - components can use the following prefixes:
      - cp    component
      - cta   call to action
      - hs    hotspot
    
    Component styles should be grouped together with a heading name
    and description. Styles within each group should then appear as
    they do in the markup including indentation.
    
    Component definitions should be ordered alphabetically.
    
    See example below. 
    (Note: A space has been added next to * to prevent this comment block from breaking.
    This would be removed when used)

/ *
	cp-componentName
	Description of component
----------------------------------------* /
.cp-componentName {}
	.cp-componentName-member {}
	.cp-componentName a {}

/ *
	cp-secondComponentName
	Description of component
----------------------------------------* /
.cp-secondComponentName {}
	.cp-secondComponentName-member {}
	.cp-secondComponentName a {}


*/

/*
	cp-numberedPara
	paragraph with a large floated number
----------------------------------------*/
.cp-numberedPara {
	padding-top: 10px;
	position: relative;
}
	.cp-numberedPara-num {
		color:#00ADEF;
		float: left;
		font-size: 3em;
		font-weight: bold;
		line-height: 1em;
		width: 30px;
		vertical-align: top;
	}

/*@import url("3.0_3.screen-forms.css");*/
/*@import url("3.0_4.screen-layouts.css");*/
/*
    3.0_2.screen-components
    
    - basic reusable items which are simple
    - components cannot contain child components or modules
    - components can use the following prefixes:
      - cp    component
      - cta   call to action
      - hs    hotspot
    
    Component styles should be grouped together with a heading name
    and description. Styles within each group should then appear as
    they do in the markup including indentation.
    
    Component definitions should be ordered alphabetically.
    
    See example below. 
    (Note: A space has been added next to * to prevent this comment block from breaking.
    This would be removed when used)

/ *
	cp-componentName
	Description of component
----------------------------------------* /
.cp-componentName {}
	.cp-componentName-member {}
	.cp-componentName a {}

/ *
	cp-secondComponentName
	Description of component
----------------------------------------* /
.cp-secondComponentName {}
	.cp-secondComponentName-member {}
	.cp-secondComponentName a {}


*/

/*
	cp-numberedPara
	paragraph with a large floated number
----------------------------------------*/
.cp-numberedPara {
	padding-top: 10px;
	position: relative;
}
	.cp-numberedPara-num {
		color:#00ADEF;
		float: left;
		font-size: 3em;
		font-weight: bold;
		line-height: 1em;
		width: 30px;
		vertical-align: top;
	}
/*
    3.0_4.screen-layouts
    
    Within the site all column layouts within main content areas should be modular
    and defined here.
    - All layouts are designed to be used with the cc class to clear the containers
    - Layouts prefix: lay 
    
    A few examples/often used layouts are defined below.
    
*/

/* 
	lay-c2
	General 2 equal column layout
-------------------------------------------------------*/
.lay-c2 {
	margin: 0;
	padding: 0;
}
	.lay-c2 .lay-c2-left,
	.lay-c2 .lay-c2-right {
		list-style-image: none;
		list-style-type: none;
		position: relative;
		width: 49.2%;
		zoom: 1; 
	}
	.lay-c2 .lay-c2-left { float: left; }
	.lay-c2 .lay-c2-right { float: right; }

/* 
	lay-c3
	General 3 equal column layout
-------------------------------------------------------*/
.lay-c3 {
	margin: 0;
	padding: 0;
	position: relative;
}
	.lay-c3 .lay-c3-left,
	.lay-c3 .lay-c3-mid,
	.lay-c3 .lay-c3-right {
		list-style-image: none;
		list-style-type: none;
		position: relative;
		width: 33.2%;
		zoom: 1; 
	}
	.lay-c3 .lay-c3-left,
	.lay-c3 .lay-c3-mid { float: left; }
	.lay-c3 .lay-c3-right { float: right; }

/* 
	lay-c2
	General 2 equal column layout
-------------------------------------------------------*/
.lay-wideL {
	margin: 0;
	padding: 0;
}
	.lay-wideL .lay-wideL-left,
	.lay-wideL .lay-wideL-right {
		list-style-image: none;
		list-style-type: none;
		position: relative;
		zoom: 1; 
	}
	.lay-wideL .lay-wideL-left { float: left; width: 640px; }
	.lay-wideL .lay-wideL-right { float: right; width: 305px; }

/*
    lay-m2
    2 Column master layout with area for content on the right
    and navigation on the left.
----------------------------------------------------------*/
.lay-m2 {
    padding-top: 25px;
    padding-bottom: 25px;
}
    .lay-m2-content {
	    position: relative;
	    /*margin-left: 25px;*/
	    float: right;
	    width: 718px;
    }
    .lay-m2-navigation {
	    position: relative;
	    float: left;
	    width: 174px;
    }

/*
    lay-m2sub
    2 column layout designed to fit within lay-m2-content to
    produce a 3 column layout keeping the content at the top
    of the page.
----------------------------------------------------------*/
.lay-m2sub {
}
    .lay-m2sub-content {
	    position: relative;
	    float: left;
	    width: 502px;
	    z-index: 2;
    }
    .lay-m2sub-aside {
	    position: relative;
	    float: right;
	    padding-top: 11px;
	    width: 190px;
	    z-index: 1;
    }
/*@import url("3.0_5.screen-modules.css");*/
/*@import url("3.0_6.screen-navs.css");*/
/*
    3.0_6.screen-navs
    - prefix: nav
*/

ul.nav-v,
.nav-v ul {
	display: block;
	margin: 0;
	padding: 0;
}
	.nav-v li {
		display: block;
		list-style: none;
		list-style-image: none;
		margin: 0;
		padding: 0;
	}




